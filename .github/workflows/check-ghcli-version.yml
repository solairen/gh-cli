---
name: Check GitHub CLI version
on:
  schedule:
    - cron: "0 20 * * 5"

env:
  GH_TOKEN: ${{ secrets.token }}
  REPO: ${{ secrets.repo }}
  DISCORD: ${{ secrets.discord_webhook }}

jobs:
  build:
    name: Check GitHub CLI version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.dockerfile_update.outputs.response }}
    steps:
      - name: Checkout version_checker repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO }}/version_checker
          ref: main
          token: ${{ env.GH_TOKEN }}
          path: .github/actions/version_checker
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: main
          token: ${{ env.GH_TOKEN }}
          path: .github/actions/${{ github.repository }}
      - name: Update dockerfile
        id: dockerfile_update
        uses: ./.github/actions/version_checker
        with:
          component: ghcli
          path: ./.github/actions/${{ github.repository }}
          token: ${{ env.GH_TOKEN }}
      - name: Upload dockerfile
        if: ${{ contains(steps.dockerfile_update.outputs.response, 'GitHub CLI version changed to') }}
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile
          path: ./.github/actions/${{ github.repository }}/Dockerfile
  push:
    needs: build
    if: ${{ contains(needs.build.outputs.version, 'GitHub CLI version changed to') }}
    name: Push changes to repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: main
          token: ${{ env.GH_TOKEN }}
      - name: Download Dockerfile
        uses: actions/download-artifact@v3
        with:
          name: dockerfile
      - name: Check GitHub CLI version
        id: ghcli
        run: |
          check=$(curl -s "https://api.github.com/repos/cli/cli/releases/latest" | grep '"tag_name":' | sed "s/[^0-9.]//g" | head -n1)
          echo ::set-output name=response::$check
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ env.GH_TOKEN }}
          title: ${{ needs.build.outputs.version }}
          commit-message: ${{ needs.build.outputs.version }}
          branch: ghcli-${{ steps.ghcli.outputs.response }}
          body: ${{ needs.build.outputs.version }}
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          name: dockerfile
  notify_on_success:
    name: Send notification on success
    needs:
      - build
      - push
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ env.DISCORD }}
          description: "${{ needs.build.outputs.version }}"
  notify_on_failure:
    name: Send notification on failure
    needs:
      - build
      - push
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ env.DISCORD }}
          status: failure
          description: "Check GitHub CLI version failed!"
