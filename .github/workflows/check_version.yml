---
name: Check GitHub CLI version
on:
  schedule:
    - cron: "0 0 * * 1"

jobs:
  build:
    name: Check GitHub CLI version
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.token }}
    outputs:
      ver: ${{ steps.dockerfile_update.outputs.response }}
    steps:
      - name: Login to GitHub registry
        run: echo ${{ env.GH_TOKEN }} | docker login docker.pkg.github.com --username ${{ github.repository_owner }} --password-stdin
      - name: Checkout version_checker repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository_owner }}/version_checker
          ref: main
          token: ${{ env.GH_TOKEN }}
          path: .github/actions/version_checker
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: main
          token: ${{ env.GH_TOKEN }}
          path: .github/actions/${{ github.repository }}
      - name: Update dockerfile
        id: dockerfile_update
        uses: ./.github/actions/version_checker
        with:
          component: ghcli
          path: ./.github/actions/${{ github.repository }}
          token: ${{ env.GH_TOKEN }}
      - name: Upload dockerfile
        if: steps.dockerfile_update.outputs.response != ''
        uses: actions/upload-artifact@v2
        with:
          name: dockerfile
          path: ./.github/actions/${{ github.repository }}/Dockerfile
  push:
    needs: build
    name: Push changes to repository
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.token }}
    if: needs.build.outputs.ver != ''
    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: main
          token: ${{ env.GH_TOKEN }}
          path: .github/actions/${{ github.repository }}
      - name: Download Dockerfile
        uses: actions/download-artifact@v2
        with:
          name: dockerfile
          path: .github/actions/${{ github.repository }}
      - name: Push changes to ${{ github.repository }} repository
        uses: actions-js/push@master
        with:
          github_token: ${{ env.GH_TOKEN }}
          author_email: ${{ secrets.mail }}
          author_name: ${{ github.repository_owner }}
          message: ${{ needs.build.outputs.ver }}
          branch: main
          directory: .github/actions/${{ github.repository }}
          repository: ${{ github.repository }}
  create_release:
    name: Create release
    needs:
      - build
      - push
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.token }}
    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: main
          token: ${{ env.GH_TOKEN }}
      - name: Get current date
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYY-MM-DD
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ steps.current-time.outputs.formattedTime }}
          body: |
            Changes in this release:
              - ${{ needs.build.outputs.ver }}
          draft: false
          prerelease: false
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v1
        with:
          name: dockerfile
